var extIdcapSecure,extRegisterIdcapCloseHandler,extDisableIdcapConsoleLog,extWebWorker,isSubscribeParam,idcap;void 0===idcap&&function(){idcap={API_VERSION:"$IDCAP_JS_EXTENSION_VERSION"};var e,o,n,c,a,s,t=0,l=[{command_id:"0",param_text:'{"command_id" : "0", "command" : "notify_sdk_version", "hcap_js_extension_version" : "$HCAP_JS_EXTENSION_VERSION"}'}],i=[{command:"0",param_text:'{"command" : "0", "command" : "notify_sdk_version", "hcap_js_extension_version" : "$HCAP_JS_EXTENSION_VERSION"}'}],r=null,d=!1,m=!1,u=!1,p=null,f=!1,g=null;function b(e){var o;!0!==extDisableIdcapConsoleLog&&(o=e.length>1024?e.substring(0,1024):e,!0!==extWebWorker&&console.log(o))}function S(e,o,n,c){var a,s="",t="";a=o[e];try{t=typeof(s=n[a])}catch(e){s="<unknown value>",t="unknown"}return"function"===t?s="{/*function*/}":"object"===t?s=g("",s):"string"===t&&(s='"'+s+'"'),c+='"'+a+'" : '+s,e<o.length-1&&(c+=", "),c}SUBSCRIBE="subscribe",isSubscribeParam=!1,!0===extDisableIdcapConsoleLog?!0!==extWebWorker&&console.log("ID - hcap console log is disabled"):!0!==extWebWorker&&console.log("ID - hcap console log is enabled"),b("check external value : extDisableIdcapConsoleLog = "+extDisableIdcapConsoleLog+", extIdcapSecure = "+extIdcapSecure+", extRegisterIdcapCloseHandler = "+extRegisterIdcapCloseHandler),n=navigator.userAgent,c=n.match(/Windows/),a=n.match(/Macintosh/),s=n.match(/Mac OS X/),b("UA = '"+n+"'"),f=!!(c||a||s)&&(b("IDCAP websocket off"),!0),g=function(e,o){var n=0,c="",a=[],s="";for(c in o)o.hasOwnProperty(c)&&a.push(c);for(a.sort(),n=0;n<a.length;n+=1)s=S(n,a,o,s);return e+"{"+s+"}"},e=function(){m?b("websocket : connection is in progress"):(m=!0,!0!==extIdcapSecure?(b("default IDcap connection"),r=new WebSocket("ws://127.0.0.1:8153/hcap_command")):(b("secure IDcap connection"),r=new WebSocket("wss://localhost:8054/idcapCommand")),r.onopen=function(){b("websocket : onopen"),m=!1,d=!0,setTimeout(p,5)},r.onmessage=function(e){var o=JSON.parse(e.data),n=o.command_id,c=o.command,a=o.result;if(console.log("ws.onmessage : "+JSON.stringify(o)),"event"===n)"debug_event_received"===c?(o.enable_log?!0!==extWebWorker&&console.log("hcap console log is enabled"):!0!==extWebWorker&&console.log("hcap console log is disabled"),extDisableIdcapConsoleLog=!o.enable_log):function(e,o){if(!0!==extWebWorker){var n="",c=e,a=document.createEvent("HTMLEvents");for(n in b(g("event received, ",o)),a.initEvent(c,!0,!1),o)o.hasOwnProperty(n)&&(a[n]=o[n]);document.dispatchEvent(a)}}(c,o);else if(l.length>0&&l[0].command_id===n){if(b(g("command_id = "+n+" received, ",o)),delete o.command_id,delete o.command,delete o.result,a){if(l[0].onSuccess)try{l[0].onSuccess(o)}catch(e){b(g("exception : onSuccess : "+e))}}else if(l[0].onFailure)try{l[0].onFailure(o)}catch(e){b(g("exception : onFailure : "+e))}l.splice(0,1),u=!1,p()}else{let e=0,n=!1;if(i.forEach(function(o){null!==o&&void 0!==o.command&&o.command===c&&(e=i.indexOf(o),n=!0)}),n){if(i[e].onSuccess)try{i[e].onSuccess(o)}catch(e){b(g("exception : onSuccess : "+e))}}else b(g("invalid response from server ",o));u=!1,p()}},r.onclose=function(){b("websocket : onclose"),m=!1,d=!1,u=!1,setTimeout(p,50)},"onbeforeunload"===extRegisterIdcapCloseHandler?window.onbeforeunload=function(){b("close hcap websocket in onbeforeunload handler"),r.onclose=function(){},r.close()}:"onunload"===extRegisterIdcapCloseHandler&&(window.onunload=function(){b("close hcap websocket in onunload handler"),r.onclose=function(){},r.close()}))},p=function(){if(!u){if(u=!0,d){if(l.length>0)return console.log("webSocket sending"),b(g("command_id = "+l[0].command_id+" sent, ",JSON.parse(l[0].param_text))),void r.send(l[0].param_text)}else e();u=!1}},o=function(e,o){if(null!==e&&""!==e&&void 0!==e)if(!1!==e.toLowerCase().startsWith("idcap://"))if(Array.isArray(o)||void 0===typeof o)console.log("[ERROR] Command Parameter Error. param is Array type or not defined.");else if(f)console.log("[ERROR] IDCAP is unavailable on this browser.");else{t>1024?t=0:t+=1;var n,c=t.toString();for(name in o.command_id=c,o.command=e,n=JSON.stringify(o,null),console.log("param_text : "+n),o)name===SUBSCRIBE&&o.hasOwnProperty(SUBSCRIBE)&&!0===o[SUBSCRIBE]&&(isSubscribeParam=!0);if(isSubscribeParam)i.forEach(function(c){null!==c&&void 0!==c.command&&c.command===o.command?console.log("already registered. : "+e):i[i.length]={command:e,param_text:n,onSuccess:o.onSuccess,onFailure:o.onFailure}}),isSubscribeParam=!1;else{let e=0,n=!1;i.forEach(function(c){null!==c&&void 0!==c.command&&c.command===o.command&&(e=i.indexOf(c),n=!0)}),n&&i.splice(e,1)}l[l.length]={command_id:c,param_text:n,onSuccess:o.onSuccess,onFailure:o.onFailure},b(g("command_id = "+c+" added, ",l[l.length-1])),p()}else console.log("[ERROR] wrong IDCAP command.");else console.log("[ERROR] Command should not be null.")},f||setTimeout(p,200),idcap.helloWorld={},idcap.helloWorld.sayHello=function(e){console.log("sayHello - IDCAP API IN print"),o("IDCAP://helloworld/sayHello",e)},idcap.request={},idcap.request=function(e,n){e=e.toLowerCase(),o(e,n)}}();
